#!/bin/bash

# Batch Processing - Task 2
# Objective: Automate the retrieval of data for multiple Pokémon and store it in separate files

# List of Pokémon to fetch
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Create directory for storing Pokémon data
DATA_DIR="pokemon_data"
mkdir -p "$DATA_DIR"

# Base API URL
BASE_URL="https://pokeapi.co/api/v2/pokemon"

# Function to fetch Pokémon data with retry logic
fetch_pokemon() {
    local pokemon_name="$1"
    local output_file="$DATA_DIR/${pokemon_name}.json"
    local max_retries=3
    local retry_count=0
    
    echo "Fetching data for $pokemon_name..."
    
    while [ $retry_count -lt $max_retries ]; do
        if curl -s -f "$BASE_URL/$pokemon_name" -o "$output_file"; then
            # Verify the JSON is valid
            if jq empty "$output_file" 2>/dev/null; then
                echo "Saved data to $output_file ✅"
                return 0
            else
                echo "Invalid JSON received for $pokemon_name, retrying..."
                rm -f "$output_file"
            fi
        else
            echo "Failed to fetch $pokemon_name (attempt $((retry_count + 1))/$max_retries)"
        fi
        
        retry_count=$((retry_count + 1))
        if [ $retry_count -lt $max_retries ]; then
            echo "Retrying in 2 seconds..."
            sleep 2
        fi
    done
    
    echo "❌ Failed to fetch $pokemon_name after $max_retries attempts"
    echo "Failed to fetch $pokemon_name at $(date)" >> errors.txt
    return 1
}

# Loop through the Pokémon list and fetch data
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon"
    # Add a small delay to avoid rate limiting
    sleep 1
done

echo ""
echo "Batch processing completed!"
echo "Data files saved in: $DATA_DIR/"
